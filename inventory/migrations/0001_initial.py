# Generated by Django 5.1.2 on 2024-10-22 18:43

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('certificates', '0001_initial'),
        ('qr_generator', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Tag Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Product Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('sku', models.CharField(max_length=100, unique=True, verbose_name='SKU')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cost')),
                ('quantity_in_stock', models.PositiveIntegerField(default=0, verbose_name='Quantity in Stock')),
                ('image_1', models.ImageField(blank=True, null=True, upload_to='products/images/', verbose_name='Image 1')),
                ('image_2', models.ImageField(blank=True, null=True, upload_to='products/images/', verbose_name='Image 2')),
                ('image_3', models.ImageField(blank=True, null=True, upload_to='products/images/', verbose_name='Image 3')),
                ('image_4', models.ImageField(blank=True, null=True, upload_to='products/images/', verbose_name='Image 4')),
                ('image_5', models.ImageField(blank=True, null=True, upload_to='products/images/', verbose_name='Image 5')),
                ('image_6', models.ImageField(blank=True, null=True, upload_to='products/images/', verbose_name='Image 6')),
                ('origin_country', models.CharField(blank=True, max_length=50, verbose_name='Country of Origin')),
                ('material_source', models.CharField(blank=True, help_text='Where the materials are sourced from.', max_length=255, verbose_name='Material Source')),
                ('carbon_footprint', models.DecimalField(blank=True, decimal_places=2, help_text="Carbon footprint in kg CO2 equivalent for the product's lifecycle.", max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Carbon Footprint (kg CO2e)')),
                ('lifecycle_assessment', models.TextField(blank=True, help_text="A description of the product's lifecycle, from raw material extraction to end-of-life.", verbose_name='Lifecycle Assessment')),
                ('production_date', models.DateField(blank=True, null=True, verbose_name='Production Date')),
                ('warranty_period', models.PositiveIntegerField(default=0, help_text='Warranty period in months.', verbose_name='Warranty Period (months)')),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10, verbose_name='Approval Status')),
                ('approved', models.BooleanField(default=False, verbose_name='Approved')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Date Added')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='inventory.category', verbose_name='Category')),
                ('product_qr', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product', to='qr_generator.productqr', verbose_name='Product QR Code')),
                ('supplier', models.ForeignKey(limit_choices_to={'role': 'supplier'}, on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL, verbose_name='Supplier')),
                ('sustainability_certificates', models.ManyToManyField(blank=True, help_text='Select from approved certificates.', limit_choices_to={'approval_status': 'approved'}, to='certificates.certificate', verbose_name='Sustainability Certificates')),
                ('tags', models.ManyToManyField(blank=True, related_name='products', to='inventory.tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'indexes': [models.Index(fields=['supplier'], name='inventory_p_supplie_81b183_idx'), models.Index(fields=['sku'], name='inventory_p_sku_f85905_idx'), models.Index(fields=['approval_status'], name='inventory_p_approva_87f194_idx')],
            },
        ),
    ]
