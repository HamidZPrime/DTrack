# Generated by Django 5.1.2 on 2024-10-22 18:43

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailVerificationToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Token')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('expires_at', models.DateTimeField(verbose_name='Expires At')),
            ],
            options={
                'verbose_name': 'Email Verification Token',
                'verbose_name_plural': 'Email Verification Tokens',
            },
        ),
        migrations.CreateModel(
            name='OperatorPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_manage_users', models.BooleanField(default=False, verbose_name='Can Manage Users')),
                ('can_manage_certificates', models.BooleanField(default=False, verbose_name='Can Manage Certificates')),
                ('can_manage_products', models.BooleanField(default=False, verbose_name='Can Manage Products')),
                ('can_manage_reports', models.BooleanField(default=False, verbose_name='Can Manage Reports')),
                ('can_manage_notifications', models.BooleanField(default=False, verbose_name='Can Manage Notifications')),
                ('can_access_financials', models.BooleanField(default=False, verbose_name='Can Access Financials')),
                ('can_manage_orders', models.BooleanField(default=False, verbose_name='Can Manage Orders')),
            ],
            options={
                'verbose_name': 'Operator Permission',
                'verbose_name_plural': 'Operator Permissions',
            },
        ),
        migrations.CreateModel(
            name='PredefinedAdminRight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('can_manage_users', models.BooleanField(default=False, verbose_name='Can Manage Users')),
                ('can_manage_certificates', models.BooleanField(default=False, verbose_name='Can Manage Certificates')),
                ('can_manage_products', models.BooleanField(default=False, verbose_name='Can Manage Products')),
                ('can_manage_reports', models.BooleanField(default=False, verbose_name='Can Manage Reports')),
                ('can_manage_notifications', models.BooleanField(default=False, verbose_name='Can Manage Notifications')),
                ('can_access_financials', models.BooleanField(default=False, verbose_name='Can Access Financials')),
                ('can_manage_orders', models.BooleanField(default=False, verbose_name='Can Manage Orders')),
            ],
            options={
                'verbose_name': 'Predefined Admin Right',
                'verbose_name_plural': 'Predefined Admin Rights',
            },
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255, verbose_name='Action')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('additional_data', models.JSONField(blank=True, null=True, verbose_name='Additional Data')),
            ],
            options={
                'verbose_name': 'User Activity Log',
                'verbose_name_plural': 'User Activity Logs',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True, verbose_name='Email Address')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('operator', 'Operator'), ('supplier', 'Supplier'), ('enduser', 'End User')], default='enduser', max_length=50, verbose_name='Role')),
                ('first_name', models.CharField(blank=True, max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='Last Name')),
                ('phone_number', models.CharField(blank=True, max_length=15, verbose_name='Phone Number')),
                ('is_active', models.BooleanField(default=False, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff Status')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser Status')),
                ('language', models.CharField(choices=[('en', 'English'), ('ar', 'Arabic')], default='en', max_length=5, verbose_name='Language')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date Joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='Last Login')),
                ('email_verified', models.BooleanField(default=False, verbose_name='Email Verified')),
                ('profile_complete', models.BooleanField(default=False, verbose_name='Profile Complete')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approved')),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10, verbose_name='Approval Status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
    ]
